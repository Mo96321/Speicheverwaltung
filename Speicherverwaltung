#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <signal.h>

// Constans
#define MEMORY_SIZE 1024
#define PARTITION_SIZE 128
#define NUM_PARTITIONS (MEMORY_SIZE / PARTITION_SIZE)

// Enums for management types and allocation types
typedef enum { STATIC, DYNAMIC, BUDDY } ManagementType;
typedef enum { FIRST_FIT, NEXT_FIT, BEST_FIT } AllocationType;

// Struct for memory blocks
typedef struct MemoryBlock {
    int size;
    struct MemoryBlock * next;
    
} MemoryBlock;

// Global variables
ManagementType management_type;
AllocationType allocation_type;
MemoryBlock* static_partitions[NUM_PARTITIONS];
int static_partition_usage[NUM_PARTITIONS];
MemoryBlock* dynamic_free_list;
MemoryBlock* dynamic_allocated_list;
MemoryBlock* buddy_free_list[10];
FILE* log_file = NULL;

// Signal handler for graceful termination
void handle_signal(int signal) {
    if (log_file) {
        fclose(log_file);
    }
    exit(EXIT_SUCCESS);
}




